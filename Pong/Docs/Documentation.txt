Modules for pong:
	 - Main
	 	- sleeps for a duration to ensure consistancy in gameplay
		- updates all sprites on the screen
		- moves left bar up or down if up or down key is pressed
		- sets ball direction if it collides with anything
		- moves ball in set direction
		- if the ball collides with the players bar, set a new targetportion of the bots bar
		- if the ball is not on the right track to hit the target portion of the bots bar, move accordingly

	- Graphics
	 	- Graphics class:
			- root
			- canvas
			- rootTitle
			- __init__
				- rect1Coords
				- rect2Coords
				- ballCoords

			- function updateSprites
				- updates the sprites tuples that contain the coordinates for them
			- function clearScreen
				- clears the screen for each iteration to draw new objects

	 - Bot
		- attribute rect2Coords
		- attribute targetPortion

		- function moveUp
			- moves bar up according to ball position and player position
		- function moveDown
			- moves bar down according to ball position and player position
		- function chooseTargetPortion
			- chooses top, mid, or bottom to decide which way to move to line up the ball and target
		- function ballCenter
			- finds the center of the balls y positions
		- function isBallToTarget
			- returns None if the ball is on course with the target portion, false otherwise
		- function ballAboveTarget
			- returns true if the ball is above the target range
		- function ballBelowTarget
			- returns true if the ball is below the target range

	 - Movement file
	 	- player bar movements
			- funtion isUpKey
				- checks to see if up key is being pressed
			- funtion isDownKey
				- checks to see if down key is being pressed
			- function moveUp
				- moves bar up if isUpKey is true
			- function moveDown
				-moves bar down if isDownKey is true
		- ball movements
			- function directionReset
				- resets ball direction
			- functions moveRight, moveLeft, moveUpRight, moveDownRight, moveUpLeft, moveDownLeft
				- changes the balls coordinates to match each of those directions

	 - Settings
	 	- settings include:
			- scoreLimit
			- startingSpeed
			- speedIncrementor
			- player1BarColor
			- player2BarColor
			- ballColor
			- backgroundColor
			- Player1WinMessage
			- Player2WinMessage
		- The settings will be read from a text file so that settings are accessible when folder is turned into an executable
	
	- Colliders module
		- player bar to ball collider
			- ball to upper bar
			- ball to middle bar
			- ball to lower bar
		- bot bar to ball collider
			- ball to upper bar
			- ball to middle bar
			- ball to lower bar
		- top screen to ball collider
		- bottom screen to ball collider
		- left screen to ball collider
		- right screen to ball collider
		- function botBarDivider
			- divides the coordinates of the bar in its current position into 3 sections
		- function plyrBarDivider
			- divides the coordinates of the bar in its current position into 3 sections

	- Score module
		- will hold a list that will store the players score and the bots score
		- will update the list to add 1 to corresponding players score when ball collides with left or right screen
		- will also be responsible for resetting all sprites on the screen

ball can move in 6 directions
- left
- right
- up left
- up right
- down left
- down right

coordinates go like: left top right bottom

DEPENDENCIES:
	As far as I know I only used builtin python modules...

Lines of Code: ~375